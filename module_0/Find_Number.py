import numpy as np
'''Поиск итерацией загаданного числа в сортированном массиве: 
   находим середину и сравниваем её с загаданным числом'''
def game_core_v3(number):
    numbers_list = [i for i in range (1, 101)] # Массив на 100 элементов
    first = numbers_list[0] # Первый элемент массива
    last = numbers_list[-1] # Последний элемент массива
    i = 0

    while first <= last: # Повторяем пока значения первого и последнего 
                         # элементов массива не совпадут
        i+=1
        middle = (first+last)//2 # Находим средний элемент массива
        if middle > number:
            last = middle-1 # Если средний элемент массива больше загаданного 
                            # числа, тогда последний элемент массива
                            # = средний элемент массива - 1
        elif middle < number:
            first = middle+1  # Если средний элемент массива меньше загаданного 
                              # числа, тогда первый элемент массива
                              #  = средний элемент массива + 1
        else:
            break # Первый и последний элементы массива равны - выходим из цикла

        # По условиям задания сравнивать можно только один раз, 
        # потому строки ниже закомментировал. Если раскоментировать эти строки,  
        # то поиск будет ещё быстрее, т.к. будет сравнивать не только середину, 
        # но и границы. Это уже будет 3 сравнения.

        #if first == number or high == number or middle == number:  
        #    break # Выходим из цикла                             
            
    return(i)


def score_game(game_core):
    '''Запускаем игру 1000 раз, чтобы узнать, \
    как быстро игра угадывает число'''
    count_ls = []
    np.random.seed(1)  # фиксируем RANDOM SEED, чтобы ваш эксперимент 
                       # был воспроизводим!
    random_array = np.random.randint(1,101, size=(1000))

    for number in random_array:
        count_ls.append(game_core(number))
        
    score = int(np.mean(count_ls))

    print(f"Ваш алгоритм угадывает число в среднем за {score} попыток")
    return(score)

score_game(game_core_v3)
